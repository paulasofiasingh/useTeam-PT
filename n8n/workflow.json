{
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "kanban-export",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "af750145-7449-4eb4-81a4-3802f388aad1",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -48,
        224
      ],
      "webhookId": "kanban-export-webhook"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "emailTo",
              "value": "={{ $json.body.emailTo }}"
            },
            {
              "name": "emailSubject",
              "value": "=Exportación de Backlog - {{ $json.body.boardName || 'Tablero Kanban' }}"
            },
            {
              "name": "emailFrom",
              "value": "paulasofiasingh@gmail.com"
            },
            {
              "name": "boardName",
              "value": "={{ $json.body.boardName || 'Tablero Kanban' }}"
            },
            {
              "name": "boardId",
              "value": "={{ $json.body.boardId }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1959c468-5fb2-4cbc-9792-e24d97e0da41",
      "name": "Set Variables",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        176,
        224
      ]
    },
    {
      "parameters": {
        "jsCode": "// Extraer y estructurar datos del tablero Kanban\nconst inputData = $input.first().json;\nconst boardData = inputData.body.boardData || {};\nconst columns = boardData.columns || [];\n\n// Estructurar datos para CSV\nlet csvData = [];\nlet csvHeaders = ['ID', 'Título', 'Descripción', 'Columna', 'Fecha de Creación', 'Fecha de Actualización', 'Prioridad', 'Asignado'];\n\n// Procesar cada columna y sus tarjetas\ncolumns.forEach(column => {\n  const columnName = column.name || 'Sin Nombre';\n  const cards = column.cards || [];\n  \n  cards.forEach(card => {\n    const cardData = [\n      card.id || '',\n      card.title || 'Sin Título',\n      card.description || '',\n      columnName,\n      card.createdAt ? new Date(card.createdAt).toISOString() : '',\n      card.updatedAt ? new Date(card.updatedAt).toISOString() : '',\n      card.priority || 'Media',\n      card.assignedTo || 'Sin Asignar'\n    ];\n    csvData.push(cardData);\n  });\n});\n\n// Generar CSV\nlet csvContent = csvHeaders.join(',') + '\\n';\ncsvData.forEach(row => {\n  const escapedRow = row.map(field => {\n    const stringField = String(field || '');\n    if (stringField.includes(',') || stringField.includes('\"') || stringField.includes('\\n')) {\n      return '\"' + stringField.replace(/\"/g, '\"\"') + '\"';\n    }\n    return stringField;\n  });\n  csvContent += escapedRow.join(',') + '\\n';\n});\n\n// Generar nombre de archivo con timestamp\nconst timestamp = new Date().toISOString().replace(/[:.]/g, '-').slice(0, 19);\nconst fileName = `backlog-${inputData.body.boardName || 'tablero'}-${timestamp}.csv`;\n\n// Crear propiedad binaria\nconst binaryData = Buffer.from(csvContent, 'utf8');\n\nreturn {\n  json: {\n    fileName: fileName,\n    totalCards: csvData.length,\n    totalColumns: columns.length,\n    boardName: inputData.body.boardName || 'Tablero Kanban',\n    exportDate: new Date().toISOString()\n  },\n  binary: {\n    data: {\n      data: binaryData,\n      mimeType: 'text/csv',\n      fileName: fileName\n    }\n  }\n};"
      },
      "id": "e6030ac1-9d1e-446c-ad2d-a84f64cf2335",
      "name": "Extract Data & Generate CSV",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        400,
        224
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"message\": \"Backlog exportado exitosamente\",\n  \"debug\": {\n    \"fileName\": \"{{ $('Extract Data & Generate CSV').item.json.fileName }}\",\n    \"totalCards\": {{ $('Extract Data & Generate CSV').item.json.totalCards }},\n    \"totalColumns\": {{ $('Extract Data & Generate CSV').item.json.totalColumns }},\n    \"boardName\": \"{{ $('Extract Data & Generate CSV').item.json.boardName }}\"\n  }\n}",
        "options": {}
      },
      "id": "70f922e7-388c-45ff-9581-cc8914add353",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        832,
        224
      ]
    },
    {
      "parameters": {
        "fromEmail": "={{ $('Set Variables').item.json.emailFrom }}",
        "toEmail": "={{ $('Set Variables').item.json.emailTo }}",
        "subject": "={{ $('Set Variables').item.json.emailSubject }}",
        "text": "=Hola,\n\n\nEl archivo CSV está adjunto a este email.\n\nSaludos,\nEquipo Kanban",
        "options": {
          "appendAttribution": true,
          "attachments": "data"
        }
      },
      "id": "ebd23c24-080d-47eb-8416-a29628826f14",
      "name": "Send email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        608,
        224
      ],
      "webhookId": "2f500d86-b101-45dd-af09-afc472953c7d",
      "credentials": {
        "smtp": {
          "id": "jZ4djSFgi3f6oQVQ",
          "name": "SMTP account"
        }
      }
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Set Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Variables": {
      "main": [
        [
          {
            "node": "Extract Data & Generate CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Data & Generate CSV": {
      "main": [
        [
          {
            "node": "Send email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send email": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ff2e1557fddb926ac8f67cb057a7ecd0f579d90fd0f4d42745891399929d15cf"
  }
}